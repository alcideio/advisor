---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: alcide-advisor
  namespace: {{ .Values.namespace }}
spec:
  schedule: {{ .Values.cronSchedule | quote }}
  # Keep the last run 
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1  
  # Concurrency is not required
  concurrencyPolicy: Forbid

  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            alcide.io/advisor: "cronjob" 
{{ if .Values.vaultAgent.enabled }}
            vault.hashicorp.com/agent-inject: "true"
            vault.hashicorp.com/role: "alcide-advisor"
            vault.hashicorp.com/agent-pre-populate-only: "true"
            vault.hashicorp.com/agent-inject-secret-{{ .Values.vaultAgent.secretFileName }}: "secret/alcide/advisor"
            vault.hashicorp.com/agent-inject-template-{{ .Values.vaultAgent.secretFileName }}: |
              Exports:
              {{"{{- with secret \"secret/alcide/advisor\" -}}"}}   
                {{"{{- if  .Data.data.prometheusUsername }}"}}
                prometheusPassword: {{"{{ .Data.data.prometheusPassword }}"}}
                prometheusUsername: {{"{{ .Data.data.prometheusUsername }}"}}
                {{"{{- end }}"}}      

                {{"{{- if .Data.data.s3AwsAccessKeyId }}"}}  
                s3AwsAccessKeyId: {{"{{ .Data.data.s3AwsAccessKeyId }}"}}
                s3AwsSecretAccessKey: {{"{{ .Data.data.s3AwsSecretAccessKey }}"}}
                {{"{{- end }}"}}  

                {{"{{- if .Data.data.slackApiToken }}"}}  
                slackApiToken: {{"{{ .Data.data.slackApiToken }}"}}
                {{"{{- end }}"}}   

                {{"{{- if  .Data.data.alcideApiKey }}"}}             
              Profile:
                alcideApiKey: {{"{{ .Data.data.alcideApiKey }}"}}
                {{"{{- end }}"}}   
              {{"{{- end }}"}}
{{ end }}
        spec:
          serviceAccountName: alcide-advisor
          containers:
          - name: advisor
            #
            # For debugging Vault injection ... going away soooooon
            #
            # imagePullPolicy: IfNotPresent
            # image: nginx
            # command: ["nginx", "-g", "daemon off;"]
            image: {{ .Values.image.alcideAdvisor }}
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            args:
              - --eula-sign
              - validate
              - cluster
              - --inCluster
{{ if not .Values.vaultAgent.enabled }}              
              - --slack-api-token
              - $(ALCIDE_ADVISOR_EXPORT_SLACK_API_TOKEN)
{{ end }}                             
              - --slack-channel
              - {{ .Values.slack.channel | quote }}
{{ if ne .Values.alcide.advisorProfileId "" }}
              - --profile-id
              - {{ .Values.alcide.advisorProfileId | quote }}  
              - --organization
              - {{ .Values.alcide.orgId | quote }}
              - --alcide-api-server
              - {{ .Values.alcide.apiServer | quote }}
              - --alcide-api-key
              - $(ALCIDE_API_KEY)                      
{{ end }} 
{{ if ne .Values.s3.s3Url "" }}
              - --s3-export-url
              - {{ .Values.s3.s3Url | quote }}
{{ end }}     
{{ if ne .Values.prometheus.pushGateway "" }}
              - --prom-push-gateway
              - {{ .Values.prometheus.pushGateway | quote }}
{{ end }}
{{ if .Values.vaultAgent.enabled }}
              - --config 
              - /vault/secrets/{{ .Values.vaultAgent.secretFileName }}
{{ end }}
              - --debug
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              runAsUser: 10001
              readOnlyRootFilesystem: true
{{ if not .Values.vaultAgent.enabled }}               
            env:
              - name: ALCIDE_API_KEY
                valueFrom:
                  secretKeyRef:
                    name: alcide-advisor-exports
                    key: alcideApiKey           
              - name: ALCIDE_ADVISOR_EXPORT_SLACK_API_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: alcide-advisor-exports
                    key: slackApiToken
              - name: ALCIDE_ADVISOR_EXPORT_AWS_ACCESS_KEY_ID
                valueFrom:
                  secretKeyRef:
                    name: alcide-advisor-exports
                    key: awsAccessKeyId
              - name: ALCIDE_ADVISOR_EXPORT_AWS_SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    name: alcide-advisor-exports
                    key: awsSecretKey 
              - name: ALCIDE_ADVISOR_EXPORT_PROM_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: alcide-advisor-exports
                    key: promPushGatewayUsername 
              - name: ALCIDE_ADVISOR_EXPORT_PROM_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: alcide-advisor-exports
                    key: promPushGatewayPassword 
{{ end }}                      
          restartPolicy: OnFailure
