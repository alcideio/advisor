---
# Source: alcide-advisor-cronjob/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: alcide-advisor
---
# Source: alcide-advisor-cronjob/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: alcide-advisor
  namespace: alcide-advisor
---
# Source: alcide-advisor-cronjob/templates/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: alcide-advisor
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["proxy"]    
  - apiGroups: ["authorization.k8s.io"]
    resources: ["subjectaccessreviews"]
    verbs: ["create"]
---
# Source: alcide-advisor-cronjob/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: alcide-advisor-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: alcide-advisor
subjects:
  - kind: ServiceAccount
    name: alcide-advisor
    namespace: alcide-advisor
---
# Source: alcide-advisor-cronjob/templates/advisorjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: alcide-advisor
  namespace: alcide-advisor
spec:
  schedule: "*/1 * * * *"
  # Keep the last run 
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1  
  # Concurrency is not required
  concurrencyPolicy: Forbid

  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            alcide.io/advisor: "cronjob" 

            vault.hashicorp.com/agent-inject: "true"
            vault.hashicorp.com/role: "alcide-advisor"
            vault.hashicorp.com/agent-pre-populate-only: "true"
            vault.hashicorp.com/agent-inject-secret-alcide-advisor.yaml: "secret/alcide/advisor"
            vault.hashicorp.com/agent-inject-template-alcide-advisor.yaml: |
              Exports:
              {{- with secret "secret/alcide/advisor" -}}   
                {{- if  .Data.data.prometheusUsername }}
                prometheusPassword: {{ .Data.data.prometheusPassword }}
                prometheusUsername: {{ .Data.data.prometheusUsername }}
                {{- end }}      

                {{- if .Data.data.s3AwsAccessKeyId }}  
                s3AwsAccessKeyId: {{ .Data.data.s3AwsAccessKeyId }}
                s3AwsSecretAccessKey: {{ .Data.data.s3AwsSecretAccessKey }}
                {{- end }}  

                {{- if .Data.data.slackApiToken }}  
                slackApiToken: {{ .Data.data.slackApiToken }}
                {{- end }}   

                {{- if  .Data.data.alcideApiKey }}             
              Profile:
                alcideApiKey: {{ .Data.data.alcideApiKey }}
                {{- end }}   
              {{- end }}

        spec:
          serviceAccountName: alcide-advisor

          containers:
          - name: advisor
            #
            # For debugging Vault injection ... going away soooooon
            #
#             imagePullPolicy: IfNotPresent
#             image: nginx
#             command: ["nginx", "-g", "daemon off;"]
#              
            image: alcidelabs/advisor:2.10.1-vault
            imagePullPolicy: Always
                  
            args:
              - --eula-sign
              - validate
              - cluster
              - --inCluster
                             
              - --slack-channel
              - "@someuser"
 

              - --s3-export-url
              - "s3://mybucket/subdir?region=us-west-2"
     


              - --config 
              - /vault/secrets/alcide-advisor.yaml

              #- --debug
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              runAsUser: 10001
              readOnlyRootFilesystem: true
                      
          restartPolicy: OnFailure
